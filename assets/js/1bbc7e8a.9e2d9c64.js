"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[982],{3905:(t,e,r)=>{r.d(e,{Zo:()=>u,kt:()=>g});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function o(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?o(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=n.createContext({}),p=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},u=function(t){var e=p(t.components);return n.createElement(s.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},d=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,o=t.originalType,s=t.parentName,u=c(t,["components","mdxType","originalType","parentName"]),d=p(r),g=a,f=d["".concat(s,".").concat(g)]||d[g]||l[g]||o;return r?n.createElement(f,i(i({ref:e},u),{},{components:r})):n.createElement(f,i({ref:e},u))}));function g(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=r.length,i=new Array(o);i[0]=d;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:a,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6652:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>p});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:2},i="Project Stracture",c={unversionedId:"getting-started/project-stracture",id:"getting-started/project-stracture",title:"Project Stracture",description:"",source:"@site/docs/getting-started/project-stracture.md",sourceDirName:"getting-started",slug:"/getting-started/project-stracture",permalink:"/site/docs/getting-started/project-stracture",draft:!1,editUrl:"https://github.com/Abstract-IDE/site/tree/main/docs/getting-started/project-stracture.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Install Formatter",permalink:"/site/docs/getting-started/installation/formatter"},next:{title:"Mappings",permalink:"/site/docs/mappings"}},s={},p=[],u={toc:p};function l(t){let{components:e,...r}=t;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"project-stracture"},"Project Stracture"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-txt",metastring:'title="~/.config/nvim/"',title:'"~/.config/nvim/"'},"\u251c\u2500\u2500 extra/\n\u2502   \u2514\u2500\u2500 snippets/                  / custom defined snippets\n\u2502   ...\n\u251c\u2500\u2500 init.lua                       / load/source configs | heart of Abstract\n\u251c\u2500\u2500 lua/\n\u2502   \u251c\u2500\u2500 autocmd.lua                / auto command configs\n\u2502   \u251c\u2500\u2500 configs.lua                / configs that's don't depends on plugins\n\u2502   \u251c\u2500\u2500 mappings.lua               / mappings that don't depends on plugins\n\u2502   \u251c\u2500\u2500 packer_nvim.lua            / manage plugins\n\u2502   \u251c\u2500\u2500 customs/\n\u2502   \u2502   \u251c\u2500\u2500 override_defalut.lua   / configs to override defined config\n\u2502   \u2502   \u2514\u2500\u2500 abstractline.lua         / i am working on it. btw it's a status line\n\u2502   \u2514\u2500\u2500 plugins/                   / dir containing configs for plugins. each plugin has it's own config and can be locaed through init.lua file\n\u2502   ...\n\u251c\u2500\u2500 plugin/                        / auto-created by plugin manager\n\u2514\u2500\u2500 setup.py                       / python-script to install/update Abstract\n")))}l.isMDXComponent=!0}}]);